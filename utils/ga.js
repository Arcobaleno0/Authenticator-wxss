"use strict";function bufferToBinaryString(e){var r=Array.prototype.map.call(e,function(e){return String.fromCharCode(e)}).join("");return r}function binaryStringToBuffer(e){var r;return r="undefined"!=typeof Uint8Array?new Uint8Array(e.length):[],Array.prototype.forEach.call(e,function(e,t){r[t]=e.charCodeAt(0)}),r}function hexToBuffer(e){var r,t,n=e.length/2,o=0;if(n!==parseInt(n,10))throw new Error("Invalid hex length '"+e.length+"'");for(t=new Uint8Array(n),r=0;n>r;r+=1)t[r]=parseInt(e[o]+e[o+1],16),o+=2;return t}function random(e,r){return void 0===e&&void 0===r?Math.random():(void 0===r&&(r=e,e=1),parseInt(Math.random()*(r-e+1))+e)}function randomBytes(e,r){if(e.length<=0)return"";if(isNaN(r))return console.warn("F.random.initialize","argument 'length' must be a number."),"";r=parseInt(r);for(var t="",n=0;r>n;n++)t+=e.substr(random(0,e.length-1),1);return t}var base32=require("./base32.js"),Buffer=require("./Buffer.js").Buffer,cryptoJS=require("./crypto.js");exports.digest=function(e){var r,t=e.secret,n=e.counter,o=e.encoding||"ascii",i=(e.algorithm||"sha1").toLowerCase();null!=e.key&&(console.warn("Speakeasy - Deprecation Notice - Specifying the secret using `key` is no longer supported. Use `secret` instead."),t=e.key),Buffer.isBuffer(t)||("base32"===o&&(t=base32.decode(t)),t=new Buffer(t,o));var a;"sha1"===i?a=20:"sha256"===i?a=32:"sha512"===i?a=64:console.warn("Speakeasy - The algorithm provided (`"+i+"`) is not officially supported, results may be different than expected."),a&&t.length!==a&&(t=new Buffer(Array(Math.ceil(a/t.length)+1).join(t.toString("hex")),"hex").slice(0,a));var s=new Buffer(8),u=n;for(r=0;8>r;r++)s[7-r]=255&u,u>>=8;var f=cryptoJS.hmac.create();return f.start(i,bufferToBinaryString(t)),f.update(bufferToBinaryString(s)),hexToBuffer(f.digest().toHex())},exports.hotp=function(e){var r=e.secret,t=e.key,n=e.counter;if(!(null!==t&&"undefined"!=typeof t||null!==r&&"undefined"!=typeof r))throw new Error("Speakeasy - hotp - Missing secret");if(null===n||"undefined"==typeof n)throw new Error("Speakeasy - hotp - Missing counter");var o=(null!=e.digits?e.digits:e.length)||6;null!=e.length&&console.warn("Speakeasy - Deprecation Notice - Specifying token digits using `length` is no longer supported. Use `digits` instead.");var i=e.digest||exports.digest(e),a=15&i[i.length-1],s=(127&i[a])<<24|(255&i[a+1])<<16|(255&i[a+2])<<8|255&i[a+3];return s=new Array(o+1).join("0")+s.toString(10),s.substr(-o)},exports.counter=exports.hotp,exports._counter=function(e){var r=e.step||30,t=null!=e.time?1e3*e.time:Date.now(),n=(null!=e.epoch?1e3*e.epoch:1e3*e.initial_time)||0;return null!=e.initial_time&&console.warn("Speakeasy - Deprecation Notice - Specifying the epoch using `initial_time` is no longer supported. Use `epoch` instead."),Math.floor((t-n)/r/1e3)},exports.totp=function(e){e=Object.create(e);var r=e.key,t=e.secret;if(!(null!==r&&"undefined"!=typeof r||null!==t&&"undefined"!=typeof t))throw new Error("Speakeasy - totp - Missing secret");return null==e.counter&&(e.counter=exports._counter(e)),this.hotp(e)},exports.time=exports.totp;